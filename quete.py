import pygame, random, sysfrom pygame.locals import *from menu.imageinterfacetoload import testrect, alphabet, policefrom battle.combatV3 import tourpartourimport minijeu.snakedef quetes(fenetre):    activefich = open("menu/quetes/active", "r")    active = activefich.read()    activefich.close()    phase1fi = open("save1/histoire/phase1", "r")    phase1 = bool(int(phase1fi.read()))    phase1fi.close()    phase2fi = open("save1/histoire/phase2", "r")    phase2 = bool(int(phase2fi.read()))    phase2fi.close()    phase3fi = open("save1/histoire/phase3", "r")    phase3 = bool(int(phase3fi.read()))    phase3fi.close()    if active == "marie":        marie(fenetre)    if active == "patrick":        patrick(fenetre)    if active == "jeanma":        if phase1:            jeanma(fenetre)        if phase2:            visitintend(fenetre)        if phase3:            fjordglas(fenetre)    if active == "dragon":        dragon(fenetre)def deleteactive(pnj):    todo = open("menu/quetes/liste", "r")    todoli = todo.read().split(",")    todo.close()    todoli.remove(pnj)    for i in range(len(todoli) - 1):        todoli[i] += ","    todostr = ""    for i in range(len(todoli)):        todostr += todoli[i]    todo = open("menu/quetes/liste", "w")    todo.write(todostr)    todo.close()    activefich = open("menu/quetes/active", "w")    activefich.write("")    activefich.close()def delete(pnj):    todo = open("menu/quetes/liste", "r")    todoli = todo.read().split(",")    todo.close()    todoli.remove(pnj)    for i in range(len(todoli) - 1):        todoli[i] += ","    todostr = ""    for i in range(len(todoli)):        todostr += todoli[i]    todo = open("menu/quetes/liste", "w")    todo.write(todostr)    todo.close()    activefich = open("menu/quetes/active", "w")    activefich.write("")    activefich.close()    todo = open("menu/quetes/quetedispo", "r")    todoli = todo.read().split(",")    todo.close()    todoli.remove(pnj)    for i in range(len(todoli) - 1):        todoli[i] += ","    todostr = ""    for i in range(len(todoli)):        todostr += todoli[i]    todo = open("menu/quetes/quetedispo", "w")    todo.write(todostr)    todo.close()def win(pnj, fenetre):    """Fonction qui permet l'affichage des dialogues pnj perso"""    clock = pygame.time.Clock()    dialoguequete = pygame.image.load("menu/quetes/HUD/boitedialogue.png").convert_alpha()    winfi = open("menu/quetes/" + pnj + "/win", "r")    winstr = winfi.read()  # On ouvre une liste dans un fichier contenant divers dialogues possibles    winfi.close()    imagepnj = pygame.image.load("menu/pnj/" + pnj + "/" + pnj + "_tall.png").convert_alpha()  # image du pnj à droite    bouton2 = pygame.image.load("menu/quetes/HUD/boutonretour.png").convert_alpha()    bouton2rect = bouton2.get_rect()    bouton2rect.x = 420    bouton2rect.y = 545    quetedispof = open("menu/quetes/quetedispo", "r")    quetedispo = quetedispof.read().split(",")  # On ouvre le fichier de sauvegarde contenant les quêtes disponibles    quetedispof.close()    quetefi = open("menu/quetes/active", "r")    queteactive = quetefi.read()  # Quete active    quetefi.close()    taillepnj = imagepnj.get_size()    x = 0    tobreak = False    text = winstr    i = 0    while 1:        for event in pygame.event.get():            if event.type == QUIT:                pygame.quit()                exit()            if event.type == KEYDOWN:                if event.key == K_ESCAPE:                    return            if event.type == MOUSEMOTION:                if event.type == MOUSEMOTION:                    testrect.x = event.pos[0]                    testrect.y = event.pos[1]            if event.type == MOUSEBUTTONDOWN:                if event.button == 1:                    if testrect.colliderect(bouton2rect):                        return        tobreak = False  # Pour casser une boucle        fenetre.blit(dialoguequete, (0, 374))        dialoguequete = pygame.image.load("menu/quetes/HUD/boitedialogue.png").convert_alpha()        fenetre.blit(imagepnj, (10, 540 - taillepnj[1]))        fenetre.blit(bouton2, bouton2rect)        if len(text) > 65:  # Si le texte sort du cadre            affich = []  # liste des lignes à afficher            k = 0  # increment            motablit = text.split(" ")  # On crée un liste avec tout les mots            for i in range(int(len(text) / 65) + 3):                affich.append("")                while len(affich[i]) < 65:  # On rajoute des mots                    if k < len(motablit) - 1:  # sauf si le nombre de caractère sort du cadre                        if len(affich[i] + motablit[k] + " ") < 65:                            affich[i] += motablit[k] + " "                        else:                            break                        k += 1                    else:                        break            if motablit[-1] not in affich[-1]:  # Si le dernier mot est décalé on le reblit dans la dernière phrase                for i in range(len(alphabet)):                    for j in range(len(affich)):                        if alphabet[i] not in affich[j]:                            affich[j] += motablit[-1]                            tobreak = True                            break                    if tobreak:                        break            if len(affich) <= 10:  # Si on sort pas du cadre horizontale                for i in range(len(affich)):  # blit normal                    dialoguequete.blit(police.render(affich[i], True, (32, 153, 152)), (175, 10 + 15 * i))            else:  # sinon on crée un curseur                tkey = pygame.key.get_pressed()                if tkey[K_UP] and x + 374 + 15 * len(affich) + 25 > 550:                    x -= 7.5                    dialoguequete = pygame.image.load("menu/quetes/HUD/boitedialogue.png").convert_alpha()                elif tkey[K_DOWN] and 384 + x + 10 <= 384:                    x += 7.5                    dialoguequete = pygame.image.load("menu/quetes/HUD/boitedialogue.png").convert_alpha()                for i in range(len(affich)):                    if x + 384 + 15 * i < 530:                        dialoguequete.blit(police.render(affich[i], True, (32, 153, 152)), (175, x + 10 + 15 * i))        if len(text) < 65:            dialoguequete.blit(police.render(text, True, (32, 153, 152)), (175, 10 + 15 * i))        clock.tick(60)  # 60 FPS        pygame.display.flip()def gagneror(nbr):    orfi = open("save1/invent/cpic", "r")  # nombre d'or    nbror = int(orfi.read())    orfi.close()    nbror += nbr    orfi = open("save1/invent/cpic", "w")  # nombre d'or    orfi.write(str(nbror))    orfi.close()def reset():    todo = open("menu/quetes/quetedispo", "w")    todo.write("jeanma,marie,dragon,patrick")    todo.close()    todo = open("menu/quetes/liste", "w")    todo.write("jeanma")    todo.close()    todo = open("menu/quetes/active", "w")    todo.write("jeanma")    todo.close()    jeanmafi = open("menu/quetes/jeanma/jeanma", "w")    jeanmafi.write("0")    jeanmafi.close()    activefich = open("menu/quetes/pnjrencontre", "w")    activefich.write("")    activefich.close()    loupfi = open("menu/quetes/jeanma/loup", "w")    loupfi.write("0")    loupfi.close()    traveli = open("save1/histoire/transibateau", "w")    traveli.write("0")    traveli.close()    phase1fi = open("save1/histoire/phase1", "w")    phase1fi.write("1")    phase1fi.close()    phase2fi = open("save1/histoire/phase2", "w")    phase2fi.write("0")    phase2fi.close()    phase3fi = open("save1/histoire/phase3", "w")    phase3fi.write("0")    phase3fi.close()    capitalefi = open("menu/quetes/jeanma/capitale", "w")    capitalefi.write("0")    capitalefi.close()    toprintfi = open("menu/quetes/jeanma/toprint", "w")    toprintfi.write("Explorez les environs")    toprintfi.close()    lieufi = open("save1/map", 'r')    lieu = lieufi.read()    lieufi.close()    posmapfi = open("save1/posmap/posmap" + lieu, "w")    posmapfi.write("")    posmapfi.close()    pospeso = open("save1/pospeso/pospeso" + lieu, "w")    pospeso.write("")    pospeso.close()    posmapfi = open("save1/posmap/posmapcapitale", "w")    posmapfi.write("-904,-4680")    posmapfi.close()    pospeso = open("save1/pospeso/pospesocapitale", "w")    pospeso.write("397,548")    pospeso.close()    lieufi = open("save1/map", 'w')    lieufi.write("mapdepart")    lieufi.close()    posmapfi = open("save1/posmap/posmapmapdepart", "w")    posmapfi.write("0,-39")    posmapfi.close()    pospeso = open("save1/pospeso/pospesomapdepart", "w")    pospeso.write("345,203")    pospeso.close()    orfi = open("save1/invent/cpic", "w")  # nombre d'or    orfi.write("0")    orfi.close()def marie(fenetre):    activefich = open("menu/quetes/pnjrencontre", "r")    active = activefich.read()    activefich.close()    if active == "patrick":        pygame.image.save(fenetre, "menu/inventory/fond.jpg")        activefich = open("menu/quetes/pnjrencontre", "w")        activefich.write("")        activefich.close()        delete("marie")        win("marie", fenetre)def patrick(fenetre):    activefich = open("menu/quetes/pnjrencontre", "r")    active = activefich.read()    activefich.close()    litransifi = open("menu/quetes/visitelieu", "r")    lieu = litransifi.read()    litransifi.close()    if active == "marie":        delete("patrick")        win("patrick", fenetre)def jeanma(fenetre):    rencontrefi = open("menu/quetes/pnjrencontre", "r")    rencontre = rencontrefi.read()    rencontrefi.close()    mobfi = open("menu/quetes/mobmort", "r")    mob = mobfi.read()    mobfi.close()    jeanmafi = open("menu/quetes/jeanma/jeanma", "r")    jeanma = jeanmafi.read()    jeanmafi.close()    loupfi = open("menu/quetes/jeanma/loup", "r")    loup = loupfi.read()    loupfi.close()    if rencontre == "jeanma" and jeanma != "1":        toprintfi = open("menu/quetes/jeanma/toprint", "w")        toprintfi.write("Sauvez-le ou vous serez chatié")        toprintfi.close()        jeanmafi = open("menu/quetes/jeanma/jeanma", "w")        jeanmafi.write("1")        jeanmafi.close()    if jeanma == "1" and mob == "loup" and loup != "1":        etat = tourpartour()        mobfi = open("menu/quetes/mobmort", "w")        mobfi.write("")        mobfi.close()        print(etat)        if etat == "victoire":            loupfi = open("menu/quetes/jeanma/loup", "w")            loupfi.write("1")            loupfi.close()            toprintfi = open("menu/quetes/jeanma/toprint", "w")            toprintfi.write("Suivez l'inconnu")            toprintfi.close()            traveli = open("save1/histoire/transibateau", "w")            traveli.write("1")            traveli.close()            phase1fi = open("save1/histoire/phase1", "w")            phase1fi.write("0")            phase1fi.close()            phase2fi = open("save1/histoire/phase2", "w")            phase2fi.write("1")            phase2fi.close()            gagneror(10)    if loup == "1":        toprintfi = open("menu/quetes/jeanma/toprint", "w")        toprintfi.write("Suivez l'inconnu")        toprintfi.close()def visitintend(fenetre):    lieufi = open("save1/map", 'r')    lieu = lieufi.read()    lieufi.close()    capitalefi = open("menu/quetes/jeanma/capitale", "r")    capitale = bool(int(capitalefi.read()))    capitalefi.close()    if lieu == "capitale" and not capitale:        toprintfi = open("menu/quetes/jeanma/toprint", "w")        toprintfi.write("Allez au chateau pour rencontrer l'intendant")        toprintfi.close()        capitalefi = open("menu/quetes/jeanma/capitale", "w")        capitalefi.write("1")        capitalefi.close()    if "chateau" in lieu:        toprintfi = open("menu/quetes/jeanma/toprint", "w")        toprintfi.write("Allez rencontrer l'intendant au deuxième étage")        toprintfi.close()        if lieu == "chateau_2F":            toprintfi = open("menu/quetes/jeanma/toprint", "w")            toprintfi.write("Il semblerait qu'il soit en train de manger...")            toprintfi.close()            rencontrefi = open("menu/quetes/pnjrencontre", "r")            rencontre = rencontrefi.read()            rencontrefi.close()            if rencontre == "intendant":                phase2fi = open("save1/histoire/phase2", "w")                phase2fi.write("0")                phase2fi.close()                phase3fi = open("save1/histoire/phase3", "w")                phase3fi.write("1")                phase3fi.close()def fjordglas(fenetre):    lieufi = open("save1/map", 'r')    lieu = lieufi.read()    lieufi.close()    toprintfi = open("menu/quetes/jeanma/toprint", "w")    toprintfi.write("Allez à FjordGlas")    toprintfi.close()    if lieu == "fjordglas":        toprintfi = open("menu/quetes/jeanma/toprint", "w")        toprintfi.write("Rencontrer les gardes")        toprintfi.close()def dragon(fenetre):    activefich = open("menu/quetes/pnjrencontre", "r")    active = activefich.read()    activefich.close()    if active == "dragon":        pygame.image.save(fenetre, "menu/inventory/screenshot.jpg")        score = snake.snake(fenetre)        activefich = open("menu/quetes/pnjrencontre", "w")        activefich.write("")        activefich.close()        if score > 10:            deleteactive("dragon")            win("dragon", fenetre)        else:            return